@using PartyGuide.Domain.Models;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model List<ServiceModel>

@{
	ViewData["Title"] = "Your Services";
}

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
	<div class="alert alert-success">
		@ViewBag.SuccessMessage
	</div>
}

@if (Model.Count == 0)
{
	<div class="d-flex align-items-center" style="height: 60vh;">
		<div class="container">
			<h1 class="text-center mb-3">You do not have any services</h1>
			<h4 class="text-center mb-3">What are you waiting for?</h4>
			<h2 class="text-center mb-3">Add one now!</h2>
			<div class="d-flex justify-content-center mt-3">
				<button class="btn-lg btn-success btn-shadow" onclick="location.href='/Service/AddNewService'">Add a service!</button>
			</div>
		</div>
	</div>

}

<div class="container mt-5">
	<div class="row">
		@foreach (var service in Model)
		{
			<div class="col-md-4 mb-4">
				<div class="card position-relative">
					<img src="~/images/party-guide.png" class="card-logo position-absolute top-0 start-0 opacity-75" alt="Site Logo" width="50px" height="50px" style="margin:10px">

					@if (service.Image != null && service.Image.Length > 0)
					{
						<img src="@($"data:image/png;base64,{Convert.ToBase64String(service.Image)}")" class="card-img-top img-fluid" alt="@service.Title" style="height: 200px; object-fit: cover;">
					}
					<div class="card-body">
						<h4 class="card-title">@service.Title</h4>
						<p class="card-text">@service.Description</p>
						<p class="card-text">Phone: @service.PhoneNumber</p>
						<p class="card-text">Price Range: $@service.StartPriceRange - $@service.EndPriceRange</p>
						<p class="card-text">Location: @service.Location</p>
						<a href="@Url.Action("ServiceDetails", "Service", new { id = service.Id })" class="btn btn-outline-secondary">Details</a>
						<button class="btn btn-danger delete-btn" data-service-id="@service.Id">Delete</button>

						<div class="rating float-end">
							@if (service.Ratings != null && service.Ratings.Any())
							{
								var averageRating = service.Ratings.Average(r => r.Rating);
								for (int i = 1; i <= 5; i++)
								{
									<span class="fa fa-star @(i <= averageRating ? "checked" : "")"></span>
								}
								<span>(@service.Ratings.Count reviews)</span>
							}
							else
							{
								<span>No reviews yet</span>
							}
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>

@section scripts {
	<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/vader/jquery-ui.css">
	<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

	<script>
		$(document).ready(function () {
			// Toggle the form visibility on button click
			$("#filterToggleBtn").click(function () {
				$("#filterForm").toggle();
			});

			// Initialize the startPrice slider
			$("#startPriceSlider").slider({
				range: "min",
				value: 0,
				min: 0,
				max: 1000,
				slide: function (event, ui) {
					// Check if startPrice is greater than endPrice
					if (ui.value >= $("#endPriceSlider").slider("value")) {
						return false;
					}

					$("#startPriceValue").val(ui.value);
					$("#startPrice").val(ui.value);
				}
			});

			// Set initial value for startPrice
			$("#startPriceValue").val($("#startPriceSlider").slider("value"));
			$("#startPrice").val($("#startPriceSlider").slider("value"));

			// Initialize the endPrice slider
			$("#endPriceSlider").slider({
				range: "max",
				value: 1000,
				min: 0,
				max: 1000,
				slide: function (event, ui) {
					// Check if endPrice is less than startPrice
					if (ui.value <= $("#startPriceSlider").slider("value")) {
						return false;
					}

					$("#endPriceValue").val(ui.value);
					$("#endPrice").val(ui.value);
				}
			});

			// Set initial value for endPrice
			$("#endPriceValue").val($("#endPriceSlider").slider("value"));
			$("#endPrice").val($("#endPriceSlider").slider("value"));
		});
	</script>

	<script>
		$(document).ready(function () {
			$(".delete-btn").click(function (e) {
				var serviceId = $(this).data("service-id");

				Swal.fire({
					title: "Are you sure you want to delete this service?",
					showDenyButton: true,
					showCancelButton: false,
					confirmButtonText: "No",
					denyButtonText: `Delete`
				}).then((result) => {
					if (result.isDenied) {
						// Send an AJAX request to delete the service
						$.ajax({
							url: "/Service/DeleteService",
							type: "GET", // or "GET" depending on your server-side implementation
							data: { id: serviceId },
							success: function (result) {
								if(result.success)
								{
									Swal.fire({
										title: "Deleted!",
										text: "The service has been deleted.",
										icon: "success",
										confirmButtonText: "OK"
									}).then(() => {
										// Reload the page after the user clicks "OK" in the Swal popup
										location.reload();
									});
								}
								else {
									Swal.fire({
										title: "Error!",
										text: "There was a problem deleting the service.",
										icon: "error",
										confirmButtonText: "OK"
									});
								}
							},
							error: function () {
								Swal.fire("Error deleting the service", "", "error");
							}
						});
					} else if (result.isConfirmed) {
						Swal.fire("The service has not been deleted", "", "info");
					}
				});
			});
		});
	</script>
	}